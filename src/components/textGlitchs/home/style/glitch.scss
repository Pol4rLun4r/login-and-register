@use "sass:math";

@mixin text-shadow($color) {
    text-shadow: 2px 4px 10px rgba($color, 0.5);
}

@mixin text-shadow-small($color) {
    text-shadow: 1px 3px 6px rgba($color, 0.5);
}

$blue: #42c3c8;
$pink: #d93da5;

.div {
    overflow: hidden;

    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        // width: 100%;
        // height: 100%;
    }
}

.text {
    position: relative;
    padding: 30px;
    font-size: 35px;
    will-change: contents, width;
    color: #FFFFFF;

    @include text-shadow(#FFFFFF);

    &::after,
    &::before {
        content: attr(data-gw-string);
        position: absolute;
        opacity: 0;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        padding: 30px;
        overflow: hidden;
        white-space: nowrap;
        color: $blue;
        will-change: contents, width;
    }

    &::before {
        z-index: -1;
        color: $pink;
    }

    &.gw-writing {
        animation: glitch-skew 1s steps(10, end) infinite alternate-reverse;

        .gw-ghosts,
        .gw-glitched {
            opacity: 0.6;
            animation: glitch-blink 1s steps(20, end) infinite alternate-reverse;
        }

        &::after,
        &::before {
            opacity: 1;
        }

        &::after {
            animation: glitch-animation-1 1.5s steps(20, end) infinite alternate-reverse;
        }

        &::before {
            animation: glitch-animation-2 2s steps(20, end) infinite alternate-reverse;
        }
    }

    @keyframes glitch-skew {
        $steps: 10;

        @for $i from 0 through $steps {
            #{percentage(math.div($i * 1, $steps))} {
                transform: skew(random(10) - 5 + deg);
            }
        }
    }

    @keyframes glitch-blink {
        $steps: 20;

        @for $i from 0 through $steps {
            #{percentage(math.div($i * 1, $steps))} {
                opacity: math.div(random(10), 10);
            }
        }
    }

    @keyframes glitch-animation-1 {
        $steps: 20;

        @for $i from 0 through $steps {
            #{percentage(math.div($i * 1, $steps))} {
                clip: rect(random(100) + px, 1000px, random(100) + px, 0);
                transform: skew(random(16) - 8 + deg) translatex(random(30) - 15 + px);
            }
        }
    }

    @keyframes glitch-animation-2 {
        $steps: 20;

        @for $i from 0 through $steps {
            #{percentage(math.div($i * 1, $steps))} {
                clip: rect(random(100) + px, 1000px, random(100) + px, 0);
                transform: skew(random(10) - 5 + deg) translatex(random(20) - 10 + px);
            }
        }
    }
}